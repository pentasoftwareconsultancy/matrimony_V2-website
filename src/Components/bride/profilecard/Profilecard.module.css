.card {
  width: 90%;
  margin: 20px;
  height: 50vh;
  border: 1px solid #ddd;
  border-radius: 10px;
  background-image: url(../images/background1.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  transition: transform 0.3s;
}




.content {
  display: flex;
  gap: 20px;
}

.image {
width: 45%;
  
}

.avatar {
  width: 100%;
  height: 50vh;
  border-radius: 10px;
  border: 2px solid #ddd;
}

.main {
  margin-left: 40px;
  padding: 30px;
}

.fullName {
  text-align: center;
  font-size: 30px;
  color: rgb(114, 15, 114);
}

.info {
  flex: 2;
  text-align: justify;
  margin-top: 20px;
  font-size: 14px;
  color: #555;
}

.info p {
  margin: 5px 0;
}

.info strong {
  color: #000;
}
/* Add your existing connect button style if needed */
/* .connect {
 
  font-size: 16px;
  padding: 10px 20px;
  border-radius: 8px;
  cursor: pointer;
} */
/* Custom button styles */
/* styles.module.css */
/* styles.module.css */

.mains_same {
  width: 155px;
  margin-left: 70px;
  margin-top: 20px;
  height: 40px;
  border-radius: 5px;
  padding: 10px 25px;
  font-family: 'Lato', sans-serif;
  font-weight: 500;
  background: transparent;
  cursor: pointer;
  position: relative;
  display: inline-block;
  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),
              7px 7px 20px 0px rgba(0, 0, 0, 0.1),
              4px 4px 5px 0px rgba(0, 0, 0, 0.1);
  outline: none;
  transition: background-image 0.5s ease-in-out; /* Smooth transition for background gradient */
  overflow: hidden; /* Ensures the background stays inside the button */
}

/* Initial gradient */
.mains_same {
  background-image: linear-gradient(315deg, #f85568 0%, #b621fe 74%);
}

/* Hover effect with rotating gradient */
.mains_same:hover {
  background-image: linear-gradient(45deg, #fc4a7f 0%, #b621fe 74%); /* Rotate the gradient on hover */
}

/* Submit text inside button */
.submit {
  position: absolute;
  top: 45%;
  left: 44%;
  transform: translate(-50%, -50%);
  color: #fff;
  font-size: 14px;
  font-weight: 500;
  text-align: center;
  z-index: 1;
}



/* .maincontanar{
  margin-top: 100px
} */

@import url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@400;700&family=DM+Mono:wght@400;500&display=swap');

:root {
  --card-height: 40vw;
  --card-margin: 4vw;
  --card-top-offset: 1em;
  --numcards: 4;
  --outline-width: 0px;
}

.cards {
  list-style: none;
  margin-top: 50px;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(var(--numcards), var(--card-height));
  gap: var(--card-margin);
  padding-bottom: calc(var(--numcards) * var(--card-top-offset));
  margin-bottom: var(--card-margin);
}


.card {
  position: sticky;
  top: 100px;
  padding-top: calc(var(--index) * var(--card-top-offset));
}

/* .cardContent {
  box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
  background: #fffaf2;
  color: #131212;
  border-radius: 2rem;
  overflow: hidden;
  display: grid;
  grid-template-areas: "text img";
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  align-items: stretch;
  padding: 1.4em;
} */

/* .cardContent > div {
  grid-area: text;
  width: 95%;
  max-width: 800px;
  place-self: center;
  text-align: left;
  display: grid;
  gap: 1em;
  place-items: start;
} */

/* .cardContent > figure {
  grid-area: img;
  overflow: hidden;
} */

/* .cardContent > figure > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: .4em;
}


p {
  font-weight: 300;
  line-height: 1.42;
  font-size: 1.1rem;
} */

/* Animation */
@supports (animation-timeline: works) {

  @scroll-timeline cards-element-scrolls-in-body {
    source: selector(body);
    scroll-offsets:
      selector(#cards) start 1,
      selector(#cards) start 0
    ;
    start: selector(#cards) start 1;
    end: selector(#cards) start 0;
    time-range: 4s;
  }

  .card {
    --index0: calc(var(--index) - 1);
    --reverse-index: calc(var(--numcards) - var(--index0));
    --reverse-index0: calc(var(--reverse-index) - 1);
  }
  
  .card__content {
    transform-origin: 50% 0%;
    will-change: transform;

    --duration: calc(var(--reverse-index0) * 1s);
    --delay: calc(var(--index0) * 1s);

    animation: var(--duration) linear scale var(--delay) forwards;
    animation-timeline: cards-element-scrolls-in-body;
  }

  @keyframes scale {
    to {
      transform:
        scale(calc(
          1.1
          - 
          calc(0.1 * var(--reverse-index))
        ));
    }
  }
}